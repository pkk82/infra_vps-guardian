---
- hosts: remotes
  remote_user: "{{ansible_ssh_user}}"
  become: true
  become_user: postgres
  vars:
    pg_backup_output_dir: "/var/backups/postgresql"
    pg_backup_filename: "{{pg_backup_output_dir}}/pg-backup-{{ansible_hostname}}-{{ansible_date_time.date}}-{{ansible_date_time.hour}}{{ansible_date_time.minute}}.gz"
  tasks:

    - name: Ensure backup directory exists
      file:
        path: "{{pg_backup_output_dir}}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0700'
      become: true
      become_user: root

    - name: Backup pg
      shell: "pg_dumpall | gzip > {{pg_backup_filename}}"

    - name: Calculate sha
      shell: "sha512sum {{pg_backup_filename}} > {{pg_backup_filename}}.sha512"

    - name: Ensure pip is installed
      ansible.builtin.apt:
        name: python3-pip
        state: present
      become: yes
      become_user: root

    - name: Install dropbox python package
      ansible.builtin.pip:
        name: dropbox
      become: yes
      become_user: root

    - name: Install requests python package
      ansible.builtin.pip:
        name: requests
      become: yes
      become_user: root

    - name: Copy Python script to remote server
      ansible.builtin.copy:
        src:  "{{playbook_dir}}/files/dropbox_upload.py"
        dest: "~/dropbox_upload.py"
        mode: 0440

    - name: Run the Python script
      ansible.builtin.shell: "python3 ~/dropbox_upload.py {{pg_backup_filename}} {{pg_backup_filename}}.sha512"
      register: script_output
      environment:
        DROPBOX_APP_KEY: "{{dropbox_pg_backuper_app_key}}"
        DROPBOX_APP_SECRET: "{{dropbox_pg_backuper_app_secret}}"
        DROPBOX_REFRESH_TOKEN: "{{dropbox_pg_backuper_refresh_token}}"

    - name: Print script output
      ansible.builtin.debug:
        var: script_output.stdout
