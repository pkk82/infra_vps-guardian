---
- hosts: remotes
  remote_user: "{{ansible_ssh_user}}"
  become: true
  become_user: postgres
  vars:
    pg_backup_output_dir: "/var/backups/postgresql"
  tasks:

    - name: Ensure backup directory exists
      file:
        path: "{{pg_backup_output_dir}}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0700'
      become: true
      become_user: root

    - import_tasks: tasks/dropbox_script_tasks.yml

    - name: Download latest backups
      ansible.builtin.shell: "python3 ~/dropbox_script.py list | grep \"pg-backup.*$\" | sort | tail -n 2 | xargs python3 ~/dropbox_script.py download {{pg_backup_output_dir}}"
      register: download_output
      environment:
        DROPBOX_APP_KEY: "{{dropbox_pg_backuper_app_key}}"
        DROPBOX_APP_SECRET: "{{dropbox_pg_backuper_app_secret}}"
        DROPBOX_REFRESH_TOKEN: "{{dropbox_pg_backuper_refresh_token}}"

    - name: Print download output
      ansible.builtin.debug:
        var: download_output.stdout

    - name: Check signature
      ansible.builtin.shell: "find {{pg_backup_output_dir}} -type f | grep \"pg-backup.*.sha512$\" | sort | tail -n 1 | xargs sha512sum -c"

    - name: Restore pg
      shell: "find {{pg_backup_output_dir}} -type f | grep \"pg-backup.*.gz$\" | sort | tail -n 1 | xargs gunzip -c | psql"
